{"ast":null,"code":"import React,{createContext,useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export const ShopContext=/*#__PURE__*/createContext(null);const ShopContextProvider=props=>{const API_URL=process.env.REACT_APP_API_URL;const[products,setProducts]=useState([]);// State to store fetched product data\nconst[brands,setBrands]=useState([]);const[cartItems,setCartItems]=useState(()=>{// Load initial cart data from localStorage or initialize with an empty object\nconst savedCart=localStorage.getItem(\"cartItems\");return savedCart?JSON.parse(savedCart):{};});// Combined data fetching useEffect\nuseEffect(()=>{const fetchData=async()=>{try{// Fetch products\nconst productResponse=await fetch(`${API_URL}/api/products/allproducts`);const productData=await productResponse.json();setProducts(productData);// Fetch brands\nconst brandResponse=await fetch(`${API_URL}/api/brands/allbrands`);const brandData=await brandResponse.json();setBrands(brandData);}catch(error){console.error(\"Error fetching data:\",error);}};fetchData();},[API_URL]);// Sync cart data with localStorage whenever cartItems changes\nuseEffect(()=>{localStorage.setItem(\"cartItems\",JSON.stringify(cartItems));},[cartItems]);// Cart operations\nconst addToCart=function(itemId){let quantity=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;setCartItems(prev=>({...prev,[itemId]:(prev[itemId]||0)+quantity}));};const removeFromCart=itemId=>{setCartItems(prev=>({...prev,[itemId]:Math.max((prev[itemId]||0)-1,0)}));};const updateCartQuantity=(itemId,newQuantity)=>{setCartItems(prev=>({...prev,[itemId]:newQuantity}));};const clearItemFromCart=itemId=>{setCartItems(prev=>{const newCart={...prev};delete newCart[itemId];return newCart;});};const getTotalCartValue=()=>{return products.reduce((total,product)=>{const quantity=cartItems[product.id]||0;return total+product.price*quantity;},0);};const getTotalItems=()=>{return Object.values(cartItems).reduce((total,quantity)=>total+quantity,0);};const clearAllItemsFromCart=()=>{setCartItems({});};// Context value\nconst contextValue={all_products:products,all_brands:brands,cartItems,addToCart,removeFromCart,updateCartQuantity,clearItemFromCart,getTotalCartValue,getTotalItems,clearAllItemsFromCart};return/*#__PURE__*/_jsx(ShopContext.Provider,{value:contextValue,children:props.children});};export default ShopContextProvider;","map":{"version":3,"names":["React","createContext","useState","useEffect","jsx","_jsx","ShopContext","ShopContextProvider","props","API_URL","process","env","REACT_APP_API_URL","products","setProducts","brands","setBrands","cartItems","setCartItems","savedCart","localStorage","getItem","JSON","parse","fetchData","productResponse","fetch","productData","json","brandResponse","brandData","error","console","setItem","stringify","addToCart","itemId","quantity","arguments","length","undefined","prev","removeFromCart","Math","max","updateCartQuantity","newQuantity","clearItemFromCart","newCart","getTotalCartValue","reduce","total","product","id","price","getTotalItems","Object","values","clearAllItemsFromCart","contextValue","all_products","all_brands","Provider","value","children"],"sources":["/Users/nnt/Documents/Projects/Online_PetShop/Pet_Shop_Web/frontend/src/context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nexport const ShopContext = createContext(null);\n\nconst ShopContextProvider = (props) => {\n    const API_URL = process.env.REACT_APP_API_URL;\n\n    const [products, setProducts] = useState([]); // State to store fetched product data\n    const [brands, setBrands] = useState([]);\n    const [cartItems, setCartItems] = useState(() => {\n        // Load initial cart data from localStorage or initialize with an empty object\n        const savedCart = localStorage.getItem(\"cartItems\");\n        return savedCart ? JSON.parse(savedCart) : {};\n    });\n\n    // Combined data fetching useEffect\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                // Fetch products\n                const productResponse = await fetch(`${API_URL}/api/products/allproducts`);\n                const productData = await productResponse.json();\n                setProducts(productData);\n\n                // Fetch brands\n                const brandResponse = await fetch(`${API_URL}/api/brands/allbrands`);\n                const brandData = await brandResponse.json();\n                setBrands(brandData);\n            } catch (error) {\n                console.error(\"Error fetching data:\", error);\n            }\n        };\n\n        fetchData();\n    }, [API_URL]);\n\n    // Sync cart data with localStorage whenever cartItems changes\n    useEffect(() => {\n        localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n    }, [cartItems]);\n\n    // Cart operations\n    const addToCart = (itemId, quantity = 1) => {\n        setCartItems((prev) => ({ ...prev, [itemId]: (prev[itemId] || 0) + quantity }));\n    };\n\n    const removeFromCart = (itemId) => {\n        setCartItems((prev) => ({\n            ...prev,\n            [itemId]: Math.max((prev[itemId] || 0) - 1, 0),\n        }));\n    };\n\n    const updateCartQuantity = (itemId, newQuantity) => {\n        setCartItems((prev) => ({ ...prev, [itemId]: newQuantity }));\n    };\n\n    const clearItemFromCart = (itemId) => {\n        setCartItems((prev) => {\n            const newCart = { ...prev };\n            delete newCart[itemId];\n            return newCart;\n        });\n    };\n\n    const getTotalCartValue = () => {\n        return products.reduce((total, product) => {\n            const quantity = cartItems[product.id] || 0;\n            return total + product.price * quantity;\n        }, 0);\n    };\n\n    const getTotalItems = () => {\n        return Object.values(cartItems).reduce((total, quantity) => total + quantity, 0);\n    };\n\n    const clearAllItemsFromCart = () => {\n        setCartItems({});\n    };\n\n    // Context value\n    const contextValue = {\n        all_products: products,\n        all_brands: brands,\n        cartItems,\n        addToCart,\n        removeFromCart,\n        updateCartQuantity,\n        clearItemFromCart,\n        getTotalCartValue,\n        getTotalItems,\n        clearAllItemsFromCart,\n    };\n\n    return (\n        <ShopContext.Provider value={contextValue}>\n            {props.children}\n        </ShopContext.Provider>\n    );\n};\n\nexport default ShopContextProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}