{"ast":null,"code":"import React,{createContext,useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export const ShopContext=/*#__PURE__*/createContext(null);const ShopContextProvider=props=>{const[products,setProducts]=useState([]);// State to store fetched product data\nconst[brands,setBrands]=useState([]);const[cartItems,setCartItems]=useState(()=>{// Load initial cart data from localStorage or initialize with empty object\nconst savedCart=localStorage.getItem(\"cartItems\");return savedCart?JSON.parse(savedCart):{};});// Fetch product data from the backend\nuseEffect(()=>{const fetchProducts=async()=>{try{const response=await fetch(\"http://localhost:4000/allproducts\");const data=await response.json();setProducts(data);}catch(error){console.error(\"Error fetching products:\",error);}};fetchProducts();},[]);// Fetch brand data \nuseEffect(()=>{const fetchBrands=async()=>{try{const response=await fetch('http://localhost:4000/allbrands');const data=await response.json();setBrands(data);}catch(error){console.error('Error fetching brands:',error);}};fetchBrands();},[]);// Sync cart data with localStorage whenever cartItems changes\nuseEffect(()=>{localStorage.setItem(\"cartItems\",JSON.stringify(cartItems));},[cartItems]);const addToCart=function(itemId){let quantity=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;setCartItems(prev=>({...prev,[itemId]:(prev[itemId]||0)+quantity}));};const removeFromCart=itemId=>{setCartItems(prev=>({...prev,[itemId]:Math.max((prev[itemId]||0)-1,0)}));};const updateCartQuantity=(itemId,newQuantity)=>{setCartItems(prev=>({...prev,[itemId]:newQuantity}));};const clearItemFromCart=itemId=>{setCartItems(prev=>({...prev,[itemId]:0}));};const getTotalCartValue=()=>{return products.reduce((total,product)=>{const quantity=cartItems[product.id]||0;return total+product.price*quantity;},0);};const getTotalItems=()=>{return Object.values(cartItems).reduce((total,quantity)=>total+quantity,0);};const clearAllItemsFromCart=()=>{setCartItems({});};const contextValue={all_products:products,// Renamed to match usage in ShopCategory.jsx\nall_brands:brands,cartItems,addToCart,removeFromCart,updateCartQuantity,clearItemFromCart,getTotalCartValue,getTotalItems,clearAllItemsFromCart};return/*#__PURE__*/_jsx(ShopContext.Provider,{value:contextValue,children:props.children});};export default ShopContextProvider;","map":{"version":3,"names":["React","createContext","useState","useEffect","jsx","_jsx","ShopContext","ShopContextProvider","props","products","setProducts","brands","setBrands","cartItems","setCartItems","savedCart","localStorage","getItem","JSON","parse","fetchProducts","response","fetch","data","json","error","console","fetchBrands","setItem","stringify","addToCart","itemId","quantity","arguments","length","undefined","prev","removeFromCart","Math","max","updateCartQuantity","newQuantity","clearItemFromCart","getTotalCartValue","reduce","total","product","id","price","getTotalItems","Object","values","clearAllItemsFromCart","contextValue","all_products","all_brands","Provider","value","children"],"sources":["/Users/nnt/Documents/Projects/Online_PetShop/frontend/src/context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nexport const ShopContext = createContext(null);\n\nconst ShopContextProvider = (props) => {\n    const [products, setProducts] = useState([]); // State to store fetched product data\n    const [brands, setBrands] = useState([]);\n    const [cartItems, setCartItems] = useState(() => {\n        // Load initial cart data from localStorage or initialize with empty object\n        const savedCart = localStorage.getItem(\"cartItems\");\n        return savedCart ? JSON.parse(savedCart) : {};\n    });\n\n    // Fetch product data from the backend\n    useEffect(() => {\n        const fetchProducts = async () => {\n            try {\n              const response = await fetch(\"http://localhost:4000/allproducts\"); \n              const data = await response.json();\n              setProducts(data); \n            } catch (error) {\n              console.error(\"Error fetching products:\", error);\n            }\n          };\n        fetchProducts();\n    }, []);\n\n    // Fetch brand data \n    useEffect(() => {\n        const fetchBrands = async () => {\n            try {\n                const response = await fetch('http://localhost:4000/allbrands'); \n                const data = await response.json();\n                setBrands(data); \n            } catch (error) {\n                console.error('Error fetching brands:', error);\n            }\n        };\n\n        fetchBrands();\n    }, []);\n\n    // Sync cart data with localStorage whenever cartItems changes\n    useEffect(() => {\n        localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n    }, [cartItems]);\n\n    const addToCart = (itemId, quantity = 1) => {\n        setCartItems((prev) => ({ ...prev, [itemId]: (prev[itemId] || 0) + quantity }));\n    };\n\n    const removeFromCart = (itemId) => {\n        setCartItems((prev) => ({\n            ...prev,\n            [itemId]: Math.max((prev[itemId] || 0) - 1, 0),\n        }));\n    };\n\n    const updateCartQuantity = (itemId, newQuantity) => {\n        setCartItems((prev) => ({ ...prev, [itemId]: newQuantity }));\n    };\n\n    const clearItemFromCart = (itemId) => {\n        setCartItems((prev) => ({ ...prev, [itemId]: 0 }));\n    };\n\n    const getTotalCartValue = () => {\n        return products.reduce((total, product) => {\n            const quantity = cartItems[product.id] || 0;\n            return total + product.price * quantity;\n        }, 0);\n    };\n\n    const getTotalItems = () => {\n        return Object.values(cartItems).reduce((total, quantity) => total + quantity, 0);\n    };\n\n    const clearAllItemsFromCart = () => {\n        setCartItems({});\n    };\n    \n    const contextValue = {\n        all_products: products, // Renamed to match usage in ShopCategory.jsx\n        all_brands: brands,\n        cartItems,\n        addToCart,\n        removeFromCart,\n        updateCartQuantity,\n        clearItemFromCart,\n        getTotalCartValue,\n        getTotalItems,\n        clearAllItemsFromCart,\n    };\n\n    return (\n        <ShopContext.Provider value={contextValue}>\n            {props.children}\n        </ShopContext.Provider>\n    );\n};\n\nexport default ShopContextProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}